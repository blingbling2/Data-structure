#define stacksize 10
typedef struct    
{
	int data[stacrsize];
	int top;
}SqStack;

int Push(SqStack *S,int e)/*入栈*/ 
{
	if(S->top == stacksize-1)	/*栈满*/
		return 0;
		
	S->top++;
	S->data[S->top] = e;
	return 1; 
}
int Pop(Sqstack *S,int *e)
{
	if(S->top == -1)
		return 0;
		
	*e = S->data[S->top];
	S->top--;
	return 1;
}




typedef struct StackNode/*结点*/ 
{
	int data;
	struct StackNode *next;
}StackNode,*LinkStackPtr;

typedef struct LinkStack
{
	LinkStackPtr top;
	int count;
}LinkStack;

int Push(LinkStack *S,int e)/*入栈*/ 
{
	LinkStackPtr s = (LinkStackPtr)malloc(sizeof(StackNode));
	s->data = e;
	s->next = S->top;
	S->top = s;
	S->count++;
	return 1; 
}
int Pop(LinkStack *s,int *e)
{
	LinkStackPtr p;
	if(StackEmpty(*S))
		return 0;
	*e = S->top->data;
	p = S->top;
	S->top = S->top->next;
	free(p);
	S->count--;
	return 1;
}
